	.file	"active.c"
__SP_H__ = 0x3e
__SP_L__ = 0x3d
__SREG__ = 0x3f
__RAMPZ__ = 0x3b
__tmp_reg__ = 0
__zero_reg__ = 1
	.text
	.section	.text.unlikely,"ax",@progbits
	.type	Dispatch, @function
Dispatch:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	ldi r18,lo8(8)
	ldi r19,lo8(1)
.L2:
	lds r24,NextP
	lds r25,NextP+1
	mul r24,r18
	movw r30,r0
	mul r24,r19
	add r31,r0
	mul r25,r18
	add r31,r0
	clr r1
	subi r30,lo8(-(Process+258))
	sbci r31,hi8(-(Process+258))
	ld r24,Z
	ldd r25,Z+1
	sbiw r24,1
	brne .L3
	lds r24,NextP
	lds r25,NextP+1
	mul r24,r18
	movw r30,r0
	mul r24,r19
	add r31,r0
	mul r25,r18
	add r31,r0
	clr r1
	subi r30,lo8(-(Process))
	sbci r31,hi8(-(Process))
	sts Cp+1,r31
	sts Cp,r30
	ld r24,Z
	ldd r25,Z+1
	sts CurrentSp+1,r25
	sts CurrentSp,r24
	subi r30,-2
	sbci r31,-2
	ldi r24,lo8(2)
	ldi r25,0
	std Z+1,r25
	st Z,r24
	lds r24,NextP
	lds r25,NextP+1
	adiw r24,1
	andi r24,3
	clr r25
	sts NextP+1,r25
	sts NextP,r24
/* epilogue start */
	ret
.L3:
	lds r24,NextP
	lds r25,NextP+1
	adiw r24,1
	andi r24,3
	clr r25
	sts NextP+1,r25
	sts NextP,r24
	rjmp .L2
	.size	Dispatch, .-Dispatch
	.text
.global	Ping
	.type	Ping, @function
Ping:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
.L5:
	out 0x5,__zero_reg__
	rjmp .L5
	.size	Ping, .-Ping
.global	Pong
	.type	Pong, @function
Pong:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	ldi r24,lo8(-128)
.L7:
	out 0x5,r24
	rjmp .L7
	.size	Pong, .-Pong
.global	Task_Terminate
	.type	Task_Terminate, @function
Task_Terminate:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	lds r24,KernelActive
	lds r25,KernelActive+1
	or r24,r25
	breq .L8
/* #APP */
 ;  411 "active.c" 1
	cli
 ;  0 "" 2
/* #NOAPP */
	lds r30,Cp
	lds r31,Cp+1
	subi r30,-6
	sbci r31,-2
	ldi r24,lo8(3)
	ldi r25,0
	std Z+1,r25
	st Z,r24
	jmp Enter_Kernel
.L8:
/* epilogue start */
	ret
	.size	Task_Terminate, .-Task_Terminate
.global	timer1_init
	.type	timer1_init, @function
timer1_init:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
/* #APP */
 ;  158 "active.c" 1
	cli
 ;  0 "" 2
/* #NOAPP */
	sts 128,__zero_reg__
	ldi r30,lo8(-127)
	ldi r31,0
	st Z,__zero_reg__
	ldi r24,lo8(127)
	ldi r25,lo8(62)
	sts 136+1,r25
	sts 136,r24
	ld r24,Z
	ori r24,lo8(8)
	st Z,r24
	ld r24,Z
	ori r24,lo8(1)
	st Z,r24
	ldi r30,lo8(111)
	ldi r31,0
	ld r24,Z
	ori r24,lo8(2)
	st Z,r24
/* #APP */
 ;  165 "active.c" 1
	sei
 ;  0 "" 2
/* epilogue start */
/* #NOAPP */
	ret
	.size	timer1_init, .-timer1_init
.global	Kernel_Create_Task_At
	.type	Kernel_Create_Task_At, @function
Kernel_Create_Task_At:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	movw r30,r24
	adiw r30,2
	ldi r18,0
	ldi r19,lo8(1)
	movw r26,r30
	movw r20,r18
	0:
	st X+,__zero_reg__
	subi r20,1
	sbci r21,0
	brne 0b
	subi r30,1
	sbci r31,-1
	ldi r18,lo8(gs(Task_Terminate))
	ldi r19,hi8(gs(Task_Terminate))
	st Z,r18
	sbiw r30,1
	st Z,r19
	sbiw r30,1
	st Z,__zero_reg__
	sbiw r30,1
	st Z,r22
	sbiw r30,1
	st Z,r23
	sbiw r30,1
	st Z,__zero_reg__
	movw r18,r24
	subi r18,39
	sbci r19,-1
	movw r26,r24
	st X+,r18
	st X,r19
	adiw r30,8
	st Z,r22
	std Z+1,r23
	adiw r30,2
	std Z+1,__zero_reg__
	st Z,__zero_reg__
	subi r24,-2
	sbci r25,-2
	ldi r18,lo8(1)
	ldi r19,0
	movw r30,r24
	std Z+1,r19
	st Z,r18
/* epilogue start */
	ret
	.size	Kernel_Create_Task_At, .-Kernel_Create_Task_At
	.type	Kernel_Create_Task.part.1, @function
Kernel_Create_Task.part.1:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	ldi r30,lo8(Process+258)
	ldi r31,hi8(Process+258)
	ldi r19,0
	ldi r18,0
.L14:
	ld r20,Z
	ldd r21,Z+1
	or r20,r21
	breq .L13
	subi r18,-1
	sbci r19,-1
	subi r30,-8
	sbci r31,-2
	cpi r18,4
	cpc r19,__zero_reg__
	brne .L14
.L13:
	lds r20,Tasks
	lds r21,Tasks+1
	subi r20,-1
	sbci r21,-1
	sts Tasks+1,r21
	sts Tasks,r20
	ldi r22,lo8(8)
	ldi r23,lo8(1)
	mul r18,r22
	movw r20,r0
	mul r18,r23
	add r21,r0
	mul r19,r22
	add r21,r0
	clr r1
	movw r22,r24
	movw r24,r20
	subi r24,lo8(-(Process))
	sbci r25,hi8(-(Process))
	jmp Kernel_Create_Task_At
	.size	Kernel_Create_Task.part.1, .-Kernel_Create_Task.part.1
	.type	Next_Kernel_Request, @function
Next_Kernel_Request:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	call Dispatch
	ldi r28,lo8(1)
	ldi r29,0
.L21:
	lds r30,Cp
	lds r31,Cp+1
	movw r26,r30
	subi r26,-6
	sbci r27,-2
	adiw r26,1
	st X,__zero_reg__
	st -X,__zero_reg__
	ld r24,Z
	ldd r25,Z+1
	sts CurrentSp+1,r25
	sts CurrentSp,r24
	call Exit_Kernel
	lds r30,Cp
	lds r31,Cp+1
	lds r24,CurrentSp
	lds r25,CurrentSp+1
	std Z+1,r25
	st Z,r24
	movw r26,r30
	subi r26,-6
	sbci r27,-2
	ld r24,X+
	ld r25,X
	cpi r24,1
	cpc r25,__zero_reg__
	breq .L22
	brlo .L23
	cpi r24,2
	cpc r25,__zero_reg__
	breq .L23
	sbiw r24,3
	brne .L21
	subi r30,-2
	sbci r31,-2
	std Z+1,__zero_reg__
	st Z,__zero_reg__
	rjmp .L32
.L22:
	subi r30,-4
	sbci r31,-2
	ld r24,Z
	ldd r25,Z+1
	lds r18,Tasks
	lds r19,Tasks+1
	cpi r18,4
	cpc r19,__zero_reg__
	breq .L21
	call Kernel_Create_Task.part.1
	rjmp .L21
.L23:
	subi r30,-2
	sbci r31,-2
	std Z+1,r29
	st Z,r28
.L32:
	call Dispatch
	rjmp .L21
	.size	Next_Kernel_Request, .-Next_Kernel_Request
.global	__vector_17
	.type	__vector_17, @function
__vector_17:
	push r1
	push r0
	in r0,__SREG__
	push r0
	clr __zero_reg__
	in r0,__RAMPZ__
	push r0
	push r18
	push r19
	push r20
	push r21
	push r22
	push r23
	push r24
	push r25
	push r26
	push r27
	push r30
	push r31
/* prologue: Signal */
/* frame size = 0 */
/* stack size = 16 */
.L__stack_usage = 16
	lds r24,KernelActive
	lds r25,KernelActive+1
	or r24,r25
	breq .L33
/* #APP */
 ;  175 "active.c" 1
	cli
 ;  0 "" 2
/* #NOAPP */
	lds r30,Cp
	lds r31,Cp+1
	subi r30,-2
	sbci r31,-2
	ldi r24,lo8(1)
	ldi r25,0
	std Z+1,r25
	st Z,r24
	call Enter_Kernel
	call Next_Kernel_Request
.L33:
/* epilogue start */
	pop r31
	pop r30
	pop r27
	pop r26
	pop r25
	pop r24
	pop r23
	pop r22
	pop r21
	pop r20
	pop r19
	pop r18
	pop r0
	out __RAMPZ__,r0
	pop r0
	out __SREG__,r0
	pop r0
	pop r1
	reti
	.size	__vector_17, .-__vector_17
.global	OS_Init
	.type	OS_Init, @function
OS_Init:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	sts Tasks+1,__zero_reg__
	sts Tasks,__zero_reg__
	sts KernelActive+1,__zero_reg__
	sts KernelActive,__zero_reg__
	sts NextP+1,__zero_reg__
	sts NextP,__zero_reg__
	ldi r30,lo8(Process)
	ldi r31,hi8(Process)
	ldi r24,lo8(8)
	ldi r25,lo8(1)
.L36:
	movw r26,r30
	movw r18,r24
	0:
	st X+,__zero_reg__
	subi r18,1
	sbci r19,0
	brne 0b
	movw r26,r30
	subi r26,-2
	sbci r27,-2
	st X+,__zero_reg__
	st X,__zero_reg__
	subi r30,-8
	sbci r31,-2
	ldi r19,hi8(Process+1056)
	cpi r30,lo8(Process+1056)
	cpc r31,r19
	brne .L36
/* epilogue start */
	ret
	.size	OS_Init, .-OS_Init
.global	OS_Start
	.type	OS_Start, @function
OS_Start:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	lds r24,KernelActive
	lds r25,KernelActive+1
	or r24,r25
	brne .L38
	lds r24,Tasks
	lds r25,Tasks+1
	or r24,r25
	breq .L38
/* #APP */
 ;  363 "active.c" 1
	cli
 ;  0 "" 2
/* #NOAPP */
	ldi r24,lo8(1)
	ldi r25,0
	sts KernelActive+1,r25
	sts KernelActive,r24
	call Next_Kernel_Request
.L38:
/* epilogue start */
	ret
	.size	OS_Start, .-OS_Start
.global	Task_Create
	.type	Task_Create, @function
Task_Create:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	lds r18,KernelActive
	lds r19,KernelActive+1
	or r18,r19
	breq .L44
/* #APP */
 ;  382 "active.c" 1
	cli
 ;  0 "" 2
/* #NOAPP */
	lds r18,Cp
	lds r19,Cp+1
	movw r30,r18
	subi r30,-6
	sbci r31,-2
	ldi r20,lo8(1)
	ldi r21,0
	std Z+1,r21
	st Z,r20
	subi r18,-4
	sbci r19,-2
	movw r30,r18
	std Z+1,r25
	st Z,r24
	jmp Enter_Kernel
.L44:
	lds r18,Tasks
	lds r19,Tasks+1
	cpi r18,4
	cpc r19,__zero_reg__
	breq .L43
	jmp Kernel_Create_Task.part.1
.L43:
/* epilogue start */
	ret
	.size	Task_Create, .-Task_Create
.global	Task_Next
	.type	Task_Next, @function
Task_Next:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	lds r24,KernelActive
	lds r25,KernelActive+1
	or r24,r25
	breq .L46
/* #APP */
 ;  398 "active.c" 1
	cli
 ;  0 "" 2
/* #NOAPP */
	lds r30,Cp
	lds r31,Cp+1
	subi r30,-6
	sbci r31,-2
	ldi r24,lo8(2)
	ldi r25,0
	std Z+1,r25
	st Z,r24
	jmp Enter_Kernel
.L46:
/* epilogue start */
	ret
	.size	Task_Next, .-Task_Next
	.section	.text.startup,"ax",@progbits
.global	main
	.type	main, @function
main:
/* prologue: function */
/* frame size = 0 */
/* stack size = 0 */
.L__stack_usage = 0
	call OS_Init
	ldi r24,lo8(gs(Pong))
	ldi r25,hi8(gs(Pong))
	call Task_Create
	ldi r24,lo8(gs(Ping))
	ldi r25,hi8(gs(Ping))
	call Task_Create
	ldi r24,lo8(-64)
	out 0x4,r24
	call timer1_init
	jmp OS_Start
	.size	main, .-main
.global	counter
	.section .bss
	.type	counter, @object
	.size	counter, 2
counter:
	.zero	2
	.local	Tasks
	.comm	Tasks,2,1
	.local	KernelActive
	.comm	KernelActive,2,1
	.local	NextP
	.comm	NextP,2,1
	.comm	CurrentSp,2,1
	.comm	KernelSp,2,1
	.local	Cp
	.comm	Cp,2,1
	.local	Process
	.comm	Process,1056,1
	.ident	"GCC: (GNU) 7.3.0"
.global __do_clear_bss
